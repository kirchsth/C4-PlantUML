@startuml

' If UNLOCK_ALL_PLANT_ELEMENTS is set BEFORE the first C4_* file is loaded,
' nearly "all" PlantUML elements can be used like
'   Component(StorageA, "Storage A ", $plant="storage")
!UNLOCK_ALL_PLANT_ELEMENTS = 1

' convert it with additional command line argument -DRELATIVE_INCLUDE="./.." to use locally
!if %variable_exists("RELATIVE_INCLUDE")
  !include %get_variable_value("RELATIVE_INCLUDE")/C4_Component.puml
!else
  !include https://raw.githubusercontent.com/kirchsth/C4-PlantUML/feature/all_plantuml_elements/C4_Component.puml
!endif

' !theme C4_united from <C4/themes>

LAYOUT_TOP_DOWN()

' default is rectangle
Component(Component, "Container", "", "A component")
' already supported: rectangle, database, queue
Component(rectangleComponent, "Container rectangle", "rectangle", "A component with rectangle element", $plant="rectangle")
Component(databaseComponent, "Container database", "database", "A component with database element", $plant="database")
Component(queueComponent, "Container queue", "queue", "A component with queue element", $plant="queue")

' node, person - conflict?

' already supported: rectangle, database, queue
' already defined (via other):
' node has a different style (cannot changed automatically)

' not really working
Component(actorComponent, "Container actor", "actor", "A component with actor element", $plant="actor")
Component(actorBCComponent, "Container actor/", "actor/", "A component with actor/ element", $plant="actor/")
Component(agentComponent, "Container agent", "agent", "A component with agent element", $plant="agent")
Component(artifactComponent, "Container artifact", "artifact", "A component with artifact element", $plant="artifact")
Component(boundaryComponent, "Container boundary", "boundary", "A component with boundary element", $plant="boundary")
Component(cardComponent, "Container card", "card", "A component with card element", $plant="card")
Component(circleComponent, "Container circle", "circle", "A component with circle element", $plant="circle")
Component(cloudComponent, "Container cloud", "cloud", "A component with cloud element", $plant="cloud")
Component(collectionsComponent, "Container collections", "collections", "A component with collections element", $plant="collections")
Component(controlComponent, "Container control", "control", "A component with control element", $plant="control")
Component(entityComponent, "Container entity", "entity", "A component with entity element", $plant="entity")
Component(fileComponent, "Container file", "file", "A component with file element", $plant="file")
Component(folderComponent, "Container folder", "folder", "A component with folder element", $plant="folder")
Component(frameComponent, "Container frame", "frame", "A component with frame element", $plant="frame")
Component(hexagonComponent, "Container hexagon", "hexagon", "A component with hexagon element", $plant="hexagon")
Component(interfaceComponent, "Container interface", "interface", "A component with interface element", $plant="interface")
Component(labelComponent, "Container label", "label", "A component with label element", $plant="label")
Component(nodeComponent, "Container node", "node", "A component with node element", $plant="node")
Component(packageComponent, "Container package", "package", "A component with package element", $plant="package")
Component(personComponent, "Container person", "person", "A component with person element", $plant="person")
Component(stackComponent, "Container stack", "stack", "A component with stack element", $plant="stack")
Component(storageComponent, "Container storage", "storage", "A component with storage element", $plant="storage")
Component(usecaseComponent, "Container usecase", "usecase", "A component with usecase element", $plant="usecase")
Component(usecaseBCComponent, "Container usecase/", "usecase/", "A component with usecase/ element", $plant="usecase/")

Container(actorContainer, "Container actor", "actor", "A Container with actor element", $plant="actor")
Container(actorBCContainer, "Container actor/", "actor/", "A Container with actor/ element", $plant="actor/")
Container(agentContainer, "Container agent", "agent", "A Container with agent element", $plant="agent")
Container(artifactContainer, "Container artifact", "artifact", "A Container with artifact element", $plant="artifact")
Container(boundaryContainer, "Container boundary", "boundary", "A Container with boundary element", $plant="boundary")
Container(cardContainer, "Container card", "card", "A Container with card element", $plant="card")
Container(circleContainer, "Container circle", "circle", "A Container with circle element", $plant="circle")
Container(cloudContainer, "Container cloud", "cloud", "A Container with cloud element", $plant="cloud")
Container(collectionsContainer, "Container collections", "collections", "A Container with collections element", $plant="collections")
Container(controlContainer, "Container control", "control", "A Container with control element", $plant="control")
Container(entityContainer, "Container entity", "entity", "A Container with entity element", $plant="entity")
Container(fileContainer, "Container file", "file", "A Container with file element", $plant="file")
Container(folderContainer, "Container folder", "folder", "A Container with folder element", $plant="folder")
Container(frameContainer, "Container frame", "frame", "A Container with frame element", $plant="frame")
Container(hexagonContainer, "Container hexagon", "hexagon", "A Container with hexagon element", $plant="hexagon")
Container(interfaceContainer, "Container interface", "interface", "A Container with interface element", $plant="interface")
Container(labelContainer, "Container label", "label", "A Container with label element", $plant="label")
Container(nodeContainer, "Container node", "node", "A Container with node element", $plant="node")
Container(packageContainer, "Container package", "package", "A Container with package element", $plant="package")
Container(personContainer, "Container person", "person", "A Container with person element", $plant="person")
Container(stackContainer, "Container stack", "stack", "A Container with stack element", $plant="stack")
Container(storageContainer, "Container storage", "storage", "A Container with storage element", $plant="storage")
Container(usecaseContainer, "Container usecase", "usecase", "A Container with usecase element", $plant="usecase")
Container(usecaseBCContainer, "Container usecase/", "usecase/", "A Container with usecase/ element", $plant="usecase/")

System(actorContainer, "Container actor", "actor", "A Container with actor element", $plant="actor")
System(actorBCContainer, "Container actor/", "actor/", "A Container with actor/ element", $plant="actor/")
System(agentContainer, "Container agent", "agent", "A Container with agent element", $plant="agent")
System(artifactContainer, "Container artifact", "artifact", "A Container with artifact element", $plant="artifact")
System(boundaryContainer, "Container boundary", "boundary", "A Container with boundary element", $plant="boundary")
System(cardContainer, "Container card", "card", "A Container with card element", $plant="card")
System(circleContainer, "Container circle", "circle", "A Container with circle element", $plant="circle")
System(cloudContainer, "Container cloud", "cloud", "A Container with cloud element", $plant="cloud")
System(collectionsContainer, "Container collections", "collections", "A Container with collections element", $plant="collections")
System(controlContainer, "Container control", "control", "A Container with control element", $plant="control")
System(entityContainer, "Container entity", "entity", "A Container with entity element", $plant="entity")
System(fileContainer, "Container file", "file", "A Container with file element", $plant="file")
System(folderContainer, "Container folder", "folder", "A Container with folder element", $plant="folder")
System(frameContainer, "Container frame", "frame", "A Container with frame element", $plant="frame")
System(hexagonContainer, "Container hexagon", "hexagon", "A Container with hexagon element", $plant="hexagon")
System(interfaceContainer, "Container interface", "interface", "A Container with interface element", $plant="interface")
System(labelContainer, "Container label", "label", "A Container with label element", $plant="label")
System(nodeContainer, "Container node", "node", "A Container with node element", $plant="node")
System(packageContainer, "Container package", "package", "A Container with package element", $plant="package")
System(personContainer, "Container person", "person", "A Container with person element", $plant="person")
System(stackContainer, "Container stack", "stack", "A Container with stack element", $plant="stack")
System(storageContainer, "Container storage", "storage", "A Container with storage element", $plant="storage")
System(usecaseContainer, "Container usecase", "usecase", "A Container with usecase element", $plant="usecase")
System(usecaseBCContainer, "Container usecase/", "usecase/", "A Container with usecase/ element", $plant="usecase/")

' SHOW_LEGEND()
@enduml